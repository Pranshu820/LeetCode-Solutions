class Solution {
public:
    
    // bool palin(string s){
    //     string q = s;
    //     reverse(s.begin(), s.end());
    //     if(!(q.compare(s))) return true;
    //     else return false;
    // }
    
    string longestPalindrome(string s) {
        // string ans = "";
        // for(int i = 0; i < s.size(); i++){
        //     for(int j = 0; j < i + 1; j++){
        //         if(palin(s.substr(j, s.size() - i))){
        //             ans = s.substr(j, s.size() - i);
        //             break;
        //         }
        //         if(ans != "") break;
        //     }
        //     if(ans != "") break;
        // }
        // return ans;
        
        string ans = "";
        int len = 0;
        
        for(int i = 0; i < s.size(); i++){
            int l = i, r = i;
            while(l >= 0 && r < s.size() && s[l] == s[r]){
                
                if(r - l + 1 > len){
                    ans = s.substr(l, r - l + 1);
                    len = r - l + 1;
                }
                
                l--;
                r++;
            }
            
            l = i, r = i + 1;
            while(l >= 0 && r < s.size() && s[l] == s[r]){
                
                if(r - l + 1 > len){
                    ans = s.substr(l, r - l + 1);
                    len = r - l + 1;
                }
                
                l--;
                r++;
            }
            
        }
        return ans;
        
    }
};
