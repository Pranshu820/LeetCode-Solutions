class Solution {
public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        vector<int> temp;
        int r = mat.size(), c = mat[0].size(), tr = 0, tc = 0, x = 0;
        
        for(int i = 1; i < c - 1; i++){
            tc = i;
            while(tr < r && tc < c){
                temp.push_back(mat[tr][tc]);
                tr++;
                tc++;
            }
            
            sort(temp.begin(), temp.end());
            tr = 0, tc = i;
            
            while(tr < r && tc < c){
                mat[tr][tc] = temp[x];
                tr++;
                tc++;
                x++;
            }
            
            tr = 0;
            x = 0;
            temp.clear();
        }
        
        tc = 0;
        
        for(int i = r - 2; i >= 0; i--){
            tr = i;
            while(tr < r && tc < c){
                temp.push_back(mat[tr][tc]);
                tr++;
                tc++;
            }
            sort(temp.begin(), temp.end());
            tr = i, tc = 0;
            
            while(tr < r && tc < c){
                mat[tr][tc] = temp[x];
                tr++;
                tc++;
                x++;
            }
            
            tc = 0;
            x = 0;
            temp.clear();
        }
        
        return mat;
    }
};
